name: CI

on:
  push:
  pull_request:

jobs:
  build:

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        java: [8, 11, 13]
      fail-fast: false

    runs-on: ${{ matrix.os }}
    name: build-${{ matrix.os }}-jdk${{ matrix.java }}

    steps:
    - uses: actions/checkout@v1

    - uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}

    - uses: s4u/maven-settings-action@v2

    - name: jdk8 on linux
      id: master-build
      run: echo "::set-output name=master::true"
      if: matrix.os == 'ubuntu-latest' && matrix.java == '8'

    - name: test master - true
      run: echo "Master"
      if: steps.master-build.outputs.master == 'true'

    - name: test master - false
      run: echo "No master"
      if: steps.master-build.outputs.master != 'true'

#    - run: env
    - run: cat ~/.m2/settings.xml
    - run: mvn -V help:effective-settings
    - run: mvn clean verify
    - run:  ls -R1 ~/.m2/
      shell: bash


  env-info:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
      - name: Dump Env
        run: env
        shell: bash
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
        shell: bash
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
        shell: bash
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
        shell: bash
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
        shell: bash
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
        shell: bash
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
        shell: bash
      - name: dump  github_event
        run: cat $GITHUB_EVENT_PATH
        shell: bash

