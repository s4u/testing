name: Labels sync

on:
  workflow_dispatch:
    inputs:
      token:
        type: string
        description: 'A GitHub token used to perform action - Read and Write access to issues and pull requests'
        required: true

jobs:
  sync-label:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 20
      matrix:
        repo:
          - testing


    steps:
      - name: Mask GitHub token
        run: echo "::add-mask::$(jq -r '.inputs.token' $GITHUB_EVENT_PATH)"

      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
        with:
          persist-credentials: false

      - name: Sync labels on ${{ matrix.repo }}
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        env:
          OWNER: 's4u'
          REPO: ${{ matrix.repo }}
        with:
          github-token: ${{ inputs.token }}
          script: |
            const labels = require('./.github/labels.js');

            console.log('Labels to update:');
            console.log(labels);
            
            const currentLabels = await github.rest.issues.listLabelsForRepo({
                owner: process.env.OWNER,
                repo: process.env.REPO
              });
            
            console.log('Current project labels:');
            console.log(currentLabels.data);
          
            for (const label of labels) {
              const currentLabel = currentLabels.data.find(({name}) => name == label.name);

              console.log('Label:');
              console.log(label);

              console.log('currentLabel:');
              console.log(currentLabel);
            
              if (!currentLabel) {
  
                console.log('Add label: ' + label.name);
                github.rest.issues.createLabel({
                  owner: process.env.OWNER,
                  repo: process.env.REPO,
                  ...label
                });
  
              } else if (label.color != currentLabel.color || label.description != currentLabel.description) {
                
                console.log('Update label: ' + label.name);
                github.rest.issues.updateLabel({
                  owner: process.env.OWNER,
                  repo: process.env.REPO,
                  ...label
                });
            
              } else {
                console.log('Label: ' + label.name + ' is up to date');
              }
            }
