name: Pull Request Management

on:
  pull_request:
    types:
      - labeled
      - unlabeled
  pull_request_review:
    types:
      - submitted

jobs:
  review-decision:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    outputs:
      decision: ${{ steps.review-decision.outputs.result }}

    steps:
      - name: Get Review decision
        id: review-decision
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const query = `query($owner:String!, $name:String!, $number:Int!) {
              repository(name: $name, owner: $owner) {
                pullRequest(number: $number) {
                  reviewDecision
                }
              }
            }`;
            
            const variables = {
              owner: context.repo.owner,
              name: context.repo.repo,
              number: context.issue.number
            }
            
            const result = await github.graphql(query, variables)
            console.log(result)
            
            return result.repository.pullRequest.reviewDecision;
      - name: Result
        run: echo "${{ steps.review-decision.outputs.result }}"

  milistopns:
    needs: review-decision
    runs-on: ubuntu-latest
    if: github.event.pull_request.milestone != null && needs.review-decision.outputs.decision == 'APPROVED'
    steps:
      - name: Get Milestone
        uses: actions/github-script@v7
        with:
          script: |
            const milestones = await github.rest.issues.listMilestones({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });
            console.log(milestones);

  labels:
    needs: review-decision
    runs-on: ubuntu-latest
    if: needs.review-decision.outputs.decision == 'APPROVED'
    steps:
      - name: Current labels - ${{ join(github.event.pull_request.labels.*.name, ', ') }}
        run: "true"

      - name: Required labels missing
        if: >
          github.event.pull_request.draft == false &&
          !(
            contains(github.event.pull_request.labels.*.name, 'bug') ||
            contains(github.event.pull_request.labels.*.name, 'dependencies')
          )

        run: |
          echo "PR should have on of label: bug, dependencies"
          false

